let currDir = fs.readdirSync(dir);

for(let i = 0; i < currDir.length; i++) {

	let fileRoute = path.join(dir,currDir[i]),
		isDir = fs.lstatSync(fileRoute).isDirectory();

	for(let j = 0; j < level ; j++) {
		if(parent === "last" && j + 1 === level) {
			this.printStd(" ");
		} else {
			this.printStd(this.visuals.column);
		}
		this.printStd(" ".repeat(this.visuals.tabSize))
	}

	if(i + 1 === currDir.length){
		this.printStd(this.visuals.corner);
	} else {
		this.printStd(this.visuals.branch);
	}

	this.printStd(this.visuals.line.repeat(this.visuals.tabSize));
	this.printStd(currDir[i] + "\n");

	if(isDir && this.isValidExp(currDir[i])) {
		let parentPos = (i + 1 === currDir.length)? "last" : "";

		this.crawlPath(path.join(dir,currDir[i]),level + 1,parentPos);
	}
}
}
